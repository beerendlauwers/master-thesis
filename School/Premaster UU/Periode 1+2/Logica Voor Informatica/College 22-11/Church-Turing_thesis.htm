<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <title>Church-Turing thesis - Definition</title>
    <meta name="robots" content="index,follow" />
<link rel="shortcut icon" href="/favicon.ico" />
    <style type="text/css" media="screen,projection">/*<![CDATA[*/ @import "/knowledge/skins/monobook/main.css"; /*]]>*/</style>
    <link rel="stylesheet" type="text/css" media="print" href="/knowledge/skins/common/commonPrint.css" />
    <script type="text/javascript" src="/knowledge/skins/common/wikibits.js"></script>
</head>
<body>
<table id="globalWrapper">
  <tr><td>
      <table id="column-content">
        <tr><td>
          <table cellpadding="0" cellspacing="0" border="0" width="800" align="center">
  <tr>
  <td valign="top" align="right" height="75"><a href="http://www.wordiq.com"><img vspace="10" src="/images/logo-header.gif" width="217" height="55" border="0" alt="" /></a></td>
  <td align="left">
  <form method="get" action="/process.php" name="search">
    <table width="100%" border="0" cellspacing="0" cellpadding="0">
      <tr>
        <td width="15"></td>
        <td colspan="2" valign="top"><font size="1"><input type="text" name="keywords" size="50" maxlength="500" value="" style="background-color: #f5f5f5; color: #0000EE; font-family: verdana; font-size: 10pt;" />&nbsp; &nbsp;<input type="submit" name="search" value="SEARCH NOW" style="background:#FFDC00;color:#000000;font-weight:300;font-family: arial;font-size: 10px;" /></font><input type="hidden" name="search_type" value="encyclopedia" />
        </td>
      </tr>
    </table>
  </form>
    </td>
  </tr>
  <tr><td colspan="2" align="center">
<a rel="nofollow" href="/info/Church-Turing_thesis"><img src="/images/nav_search_on.gif" width="63" height="20" border="0" alt="" /></a>
<a href="/definition/Church-Turing_thesis"><img src="/images/nav_encyclopedia_off.gif" width="109" height="20" border="0" alt="" /></a> 
<a href="/dictionary.html"><img src="/images/nav_dictionary_off.gif" width="88" height="20" border="0" alt="Church-Turing_thesis" /></a>
<a href="/thesaurus.html"><img src="/images/nav_thesaurus_off.gif" border="0" alt="Church-Turing_thesis" /></a>
<a href="/books.html"><img src="/images/nav_ebooks_off.gif" width="69" height="20" border="0" alt="" /></a>
  </td></tr>
</table>

<table cellpadding="0" cellspacing="0" border="0" width="800" align="center">
  <tr>         
  <td width="800">
        <table align="center" width="100%" border="0" cellpadding="0" cellspacing="0" bgcolor="#eeeeee">
          <tr><td bgcolor="#bbbbbb" height="1"></td></tr>
          <tr> 
            <td><h1>Church-Turing thesis - Definition</h1></td>
          </tr>
        </table>
  </td>     
  </tr>
</table>

<!-- START CONTENT -->

<table width="800" align="center" cellspacing="0" cellpadding="0">
  <tr>
    <td width="100%" valign="top" style="padding-top:5px">
	  <table id="bodyContent">
            <tr><td>
	    <!-- start content -->
	    <p>In <a href="/definition/Computability_theory">computability theory</a> the <b>Church-Turing thesis</b>, <b>Church's thesis</b>, <b>Church's conjecture</b> or <b>Turing's thesis</b>, named after <a href="/definition/Alonzo_Church">Alonzo Church</a> and <a href="/definition/Alan_Turing">Alan Turing</a>, is a <a href="/definition/Hypothesis">hypothesis</a> about the nature of mechanical calculation devices, like computers, and what kind of <a href="/definition/Algorithm">algorithms</a> they can perform.
</p><p>It is generally assumed that an algorithm must satisfy the following requirements:
</p>
<ol><li> The algorithm consists of a finite set of simple and precise instructions that are described with a finite number of symbols.
</li><li> The algorithm will always produce the result in a finite number of steps.
</li><li> The algorithm can in principle be carried out by a human being with only paper and pencil.
</li><li> The execution of the algorithm requires no intelligence of the human being except that which is needed to understand and execute the instructions.
</li></ol>
<p>An example of such a method is the <a href="/definition/Euclidean_algorithm">Euclidean algorithm</a> for determining the <a href="/definition/Greatest_common_divisor">greatest common divisor</a> of two <a href="/definition/Natural_number">natural numbers</a>.
</p><p>The notion of algorithm is intuitively clear but is not formally defined since it is not exactly clear what a "simple and precise instruction" is, and what exactly the "required intelligence to execute these instructions" is. (See for example <a href="/definition/Effective_results_in_number_theory">effective results in number theory</a> for cases well beyond the Euclidean algorithm.)
</p><p>Informally the thesis states that our notion of algorithm can be made precise (in the form of <a href="/definition/Computable_function">computable function</a>) and computers can run those algorithms. Furthermore any computer can theoretically run any algorithm, that is the theoretic computational power of each computer is the same and it is not possible to build a calculation device which is more powerful than a computer. (Note that this formulation has implicit in it the idea that <i>memory</i>/<i>storage</i> is separate from <i>device</i>; any actual computer has finite memory, but the formulation always assumes that memory can be added at will.)
</p><p>The thesis may be regarded as a <a href="/definition/Physical_law">physical law</a> as it cannot be mathematically proven. 
</p>
<table border="0" id="toc"><tr id="toctitle"><td align="center">
<b>Contents</b> <script type="text/javascript">showTocToggle("show","hide")</script></td></tr><tr id="tocinside"><td>
<div class="tocline"><a href="#Church-Turing_thesis">1 Church-Turing thesis</a><br /></div>
<div class="tocline"><a href="#History">2 History</a><br /></div>
<div class="tocline"><a href="#Success_of_the_thesis">3 Success of the thesis</a><br /></div>
<div class="tocline"><a href="#Philosophical_implications">4 Philosophical implications</a><br /></div>
<div class="tocline"><a href="#Additional_reading">5 Additional reading</a><br /></div>
<div class="tocline"><a href="#References">6 References</a><br /></div>
<div class="tocline"><a href="#External_links">7 External links</a><br /></div>
<div class="tocline"><a href="#See_also">8 See also</a><br /></div>
</td></tr></table>
<a name="Church-Turing_thesis"></a><h2> Church-Turing thesis </h2>
<p>The thesis, in Turing's own words, can be stated as:
</p>
<dl><dd><i>Every '<a href="/definition/Function_%28mathematics%29">function</a> which would naturally be regarded as <a href="/definition/Computable_function">computable</a>' can be computed by a <a href="/definition/Turing_machine">Turing machine</a>.</i>
</dd></dl>
<p>Due to the vagueness of the concept of a "function which would naturally be regarded as computable", the thesis can neither be proven nor disproven formally. 
</p><p>Any computer program can be translated into a Turing machine, and any Turing machine can be translated into any general-purpose <a href="/definition/Programming_language">programming language</a>, so the thesis is equivalent to saying that any general-purpose programming language is sufficient to express any algorithm.
</p><p>Various variations of the thesis exist; for example, the Physical Church-Turing thesis (PCTT) states:
</p>
<dl><dd><i>Every function that can be physically computed can be computed by a Turing machine.</i>
</dd></dl>
<p>This stronger statement was proven false in <a href="/definition/2002">2002</a> when William Fouché discovered that a Turing machine cannot effectively approximate any of the values of one-dimensional <a href="/definition/Brownian_motion">Brownian motion</a> at rational points in time almost surely (with respect to <a href="/definition/Wiener_measure">Wiener measure</a>; see reference below)
</p><p>Another variation is the Strong Church-Turing thesis (SCTT), which states (cf. Bernstein, Vazirani 1997):
</p>
<dl><dd><i>Any 'reasonable' model of computation can be efficiently simulated on a probabilistic Turing machine.</i>
</dd></dl>
<a name="History"></a><h2> History </h2>
<p>The thesis is named after mathematicians <a href="/definition/Alonzo_Church">Alonzo Church</a> and <a href="/definition/Alan_Turing">Alan Turing</a>. In his <a href="/definition/1936">1936</a> paper "On Computable Numbers, with an Application to the <a href="/definition/Entscheidungsproblem">Entscheidungsproblem</a>" Alan Turing tried to capture the notion of algorithm (then called "effective computability"), with the introduction of Turing machines. In that paper he showed that the 'Entscheidungsproblem' could not be solved. A few months earlier Alonzo Church had proven a similar result in "A Note on the Entscheidungsproblem" but he used the notions of <a href="/definition/Recursive_function">recursive functions</a> and <a href="/definition/Lambda-definable_function">Lambda-definable functions</a> to formally describe effective computability. Lambda-definable functions were introduced by Alonzo Church and <a href="/definition/Stephen_Kleene">Stephen Kleene</a> (Church 1932, 1936a, 1941, Kleene 1935) and recursive functions by <a href="/definition/Kurt_G%F6del">Kurt Gödel</a> and <a href="/definition/Jacques_Herbrand">Jacques Herbrand</a> (Gödel 1934, Herbrand 1932). These two formalisms describe the same set of functions, as was shown in the case of functions of positive integers by Church and Kleene (Church 1936a, Kleene 1936). When hearing of Church's proposal, Turing was quickly able to show that his Turing machines in fact describe the same set of functions (Turing 1936, 263ff).
</p>
<a name="Success_of_the_thesis"></a><h2> Success of the thesis </h2>
<p>Since that time many other formalisms for describing effective computability have been proposed, including <a href="/definition/Recursive_function">recursive functions</a>, the <a href="/definition/Lambda_calculus">lambda calculus</a>, <a href="/definition/Register_machine">register machines</a>, <a href="/definition/Post_system">Post systems</a>, <a href="/definition/Combinatory_logic">combinatory logic</a>, and <a href="/definition/Markov_algorithm">Markov algorithms</a>. All these systems have been shown to compute essentially the same functions as Turing machines; systems like this are called <a href="/definition/Turing-complete">Turing-complete</a>. Because all these different attempts of formalizing the concept of algorithm have yielded equivalent results, it is now generally assumed that the Church-Turing thesis is correct. However, the thesis is a definition and not a <a href="/definition/Theorem">theorem</a>, and hence cannot be proven true.  It could, however, be disproven if a method could be exhibited which is universally accepted as being an effective algorithm but which cannot be performed on a Turing machine.
</p><p>In the early twentieth century, mathematicians often used the informal phrase <i>effectively computable</i>, so it was important to find a good formalization of the concept. Modern mathematicians instead use the well-defined term <i>Turing computable</i> (or <i><a href="/definition/Computability_theory">computable</a></i> for short). Since the undefined terminology has faded from use, the question of how to define it is now less important.
</p><p>The success of the Church&ndash;Turing thesis prompted <b>supertheses</b> that extend the thesis, including the conjecture that there is a polynomial transformation from the representation of computable functions in one formalization to their representation in another, and the conjecture that every model of computation can be step-by-step simulated by a Turing machine.
</p>
<a name="Philosophical_implications"></a><h2> Philosophical implications </h2>
<p>The Church-Turing thesis has some profound implications for the <a href="/definition/Philosophy_of_mind">philosophy of mind</a>. There are also some important open questions which cover the relationship between the Church-Turing thesis and physics, and the possibility of <a href="/definition/Hypercomputation">hypercomputation</a>. When applied to physics, the thesis has several possible meanings:
</p>
<ol><li> The universe is equivalent to a Turing machine (and thus, computing non-recursive functions is physically impossible).  This has been termed the <i>strong Church-Turing thesis</i> and is assumed in <a href="/definition/Digital_physics">digital physics</a>.
</li><li> The universe is not a Turing machine (ie, the laws of physics are not Turing-computable), but incomputable physical events are not "harnessable" for the construction of a <a href="/definition/Hypercomputation">hypercomputer</a>.  For example, a universe in which physics involves <a href="/definition/Real_numbers">real numbers</a>, as opposed to <a href="/definition/Computable_number">computable reals</a>, might fall into this category.
</li><li> The universe is a <a href="/definition/Hypercomputation">hypercomputer</a>, and it is possible to build physical devices to harness this property and calculate non-recursive functions. For example, it is an open question whether all <a href="/definition/Quantum_mechanics">quantum mechanical</a> events are Turing-computable, although it has been proved that any system built out of <a href="/definition/Qubit">qubits</a> is (at best) Turing-complete.  <a href="/definition/John_Lucas_%28philosopher%29">John Lucas</a> (and famously, <a href="/definition/Roger_Penrose">Roger Penrose</a>) have suggested that the human mind might be the result of quantum hypercomputation, although a lack of physical or neurological evidence renders this theory scientifically dubious.
</li></ol>
<p>There are actually many technical possibilities which fall outside or between these three categories, but these should serve to illustrate the concept.
</p>
<a name="Additional_reading"></a><h2> Additional reading </h2>
<ul><li> <a href="/definition/Hofstadter%2C_Douglas_R.">Hofstadter, Douglas R.</a>,  <i><a href="/definition/G%F6del%2C_Escher%2C_Bach:_an_Eternal_Golden_Braid">Gödel, Escher, Bach: an Eternal Golden Braid</a></i>, Chapter 17.
</li></ul>
<a name="References"></a><h2> References </h2>
<ul><li> <a href="/definition/Church%2C_A.">Church, A.</a>, 1932, "A set of Postulates for the Foundation of Logic", <i>Annals of Mathematics</i>, second series, 33, 346-366.
</li><li> Church, A., 1936, "An Unsolvable Problem of Elementary Number Theory", <i>American Journal of Mathematics</i>, 58, 345-363.
</li><li> Church, A., 1936, "A Note on the Entscheidungsproblem", <i>Journal of Symbolic Logic</i>, 1, 40-41.
</li><li> Church, A., 1941, <i>The Calculi of Lambda-Conversion</i>, Princeton: Princeton University Press.
</li><li> <a href="/definition/G%F6del%2C_K.">Gödel, K.</a>, 1934, "On Undecidable Propositions of Formal Mathematical Systems", lecture notes taken by Kleene and Rosser at the Institute for Advanced Study, reprinted in Davis, M. (ed.) 1965, <i>The Undecidable</i>, New York: Raven.
</li><li> <a href="/definition/Herbrand%2C_J.">Herbrand, J.</a>, 1932, "Sur la non-contradiction de l'arithmetique", <i>Journal fur die reine und angewandte Mathematik</i>, 166, 1-8.
</li><li> <a href="/definition/Kleene%2C_S.C.">Kleene, S.C.</a>, 1935, "A Theory of Positive Integers in Formal Logic", <i>American Journal of Mathematics</i>, 57, 153-173, 219-244.
</li><li> Kleene, S.C., 1936, "Lambda-Definability and Recursiveness", <i>Duke Mathematical Journal</i> 2, 340-353.
</li><li> <a href="/definition/Markov%2C_A.A.">Markov, A.A.</a>, 1960, "The Theory of Algorithms", <i>American Mathematical Society Translations</i>, series 2, 15, 1-14.
</li><li> <a href="/definition/Turing%2C_A.M.">Turing, A.M.</a>, 1936, "<a href="http://www.abelard.org/turpap2/tp2-ie.asp" class='external' title="http://www.abelard.org/turpap2/tp2-ie.asp" rel="nofollow">On Computable Numbers, with an Application to the Entscheidungsproblem</a><span class='urlexpansion'>&nbsp;(<i>http://www.abelard.org/turpap2/tp2-ie.asp</i>)</span>", <i>Proceedings of the London Mathematical Society</i>, Series 2, 42 (1936-37), pp.230-265. 
</li><li> Pour-El, M.B. &amp; Richards, J.I., 1989, <i>Computability in Analysis and Physics</i>, Springer Verlag.
</li><li> William Fouché, <i>Arithmetical representations of Brownian motion</i>, J. Symbolic Logic 65 (2000) 421-442
</li><li> E. Bernstein, U. Vazirani, <i>Quantum complexity theory</i>, SIAM Journal on Computing 26(5) (1997) 14111473
</li></ul>
<a name="External_links"></a><h2> External links </h2>
<ul><li> <a href="http://plato.stanford.edu/entries/church-turing/" class='external' title="http://plato.stanford.edu/entries/church-turing/" rel="nofollow">Detailed info on the Church-Turing Hypothesis</a><span class='urlexpansion'>&nbsp;(<i>http://plato.stanford.edu/entries/church-turing/</i>)</span> (Stanford Encyclopedia of Philosophy)
</li></ul>
<a name="See_also"></a><h2> See also </h2>
<ul><li><a href="/definition/Computability_logic">Computability logic</a>
</li><li><a href="/definition/Interactive_computation">Interactive computation</a>
</li><li><a href="/definition/Computability_theory">Computability theory</a>
</li></ul>
<p>
</p>
<!-- end bodytext -->	    <!-- end content -->
            </td></tr>
          </table>
          </td>
  </tr> 
</table>
<!-- END CONTENT -->

<!-- START LATEST TWEETS --> 
<table align="center" cellspacing="2" cellpadding="5" width="800" border="0">
  <tr>
    <td colspan="2"><h2>Church-Turing - Example Usage</h2></td>
  </tr>
<tr>
  <td><a href="http://www.twitter.com/ComputersBooks"><img src="http://a1.twimg.com/profile_images/715247133/books_normal.jpg" width="48" height="48"></a></td>
  <td>ComputersBooks:  Hypercomputation: Computing Beyond the <b>Church-Turing</b> Barrier - by Apostolos Syropoulos - Springer. <a href="http://amzn.to/aUOcFI">http://amzn.to/aUOcFI</a></td>
</tr>
<tr>
  <td><a href="http://www.twitter.com/CompprogBooks"><img src="http://a3.twimg.com/profile_images/1159526435/id3642150195_normal.png" width="48" height="48"></a></td>
  <td>CompprogBooks:  Hypercomputation: Computing Beyond the <b>Church-Turing</b> Barrier - by Apostolos Syropoulos - Springer. <a href="http://amzn.to/bqK2HO">http://amzn.to/bqK2HO</a></td>
</tr>
<tr>
  <td><a href="http://www.twitter.com/lescarr"><img src="http://a1.twimg.com/profile_images/1134331217/image_normal.jpg" width="48" height="48"></a></td>
  <td>lescarr:  @benosteen @psychemedia What does it mean to "run" maths anyway: need to ask Church & Turing!</td>
</tr>
<tr>
  <td><a href="http://www.twitter.com/debasishg"><img src="http://a2.twimg.com/profile_images/983678766/12062010119_normal.jpg" width="48" height="48"></a></td>
  <td>debasishg:  @viktorklang Theoretically you can always do it .. blame it on <b>Church-Turing</b> thesis - recursive systems & turing m/cs r equivalent</td>
</tr>
</table>
<!-- END TWEETS --> 

<!-- START 800x140 AD CODE -->
<table align="center" cellspacing="2" cellpadding="2" width="800" border="0">
  <tr>
    <td valign="top" align="center" width="800">
<script type="text/javascript"><!--
google_ad_client = "pub-3085503319014171";
google_ad_slot = "1825893504";
google_ad_width = 728;
google_ad_height = 90;
//-->
</script>
<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
    </td>
  </tr>
  <tr>
    <td valign="middle" align="center" width="100%" style="padding-top:5px">
<font size="1" face="Arial">Copyright 2010 WordIQ.com - <a href="/privacy.html"><font color="#0000EE">Privacy Policy</font></a>&nbsp;</font>
<b><font color="#aaaaaa" face="Arial" size="2">::</font></b><font size="1" face="Arial">&nbsp;<a href="/terms.html"><font color="#0000EE">Terms of Use</font></a>&nbsp;</font>
<b><font color="#aaaaaa" face="Arial" size="2">::</font></b><font size="1" face="Arial">&nbsp;<a href="/contact.html"><font color="#0000EE">Contact Us</font></a>&nbsp;</font>
<b><font color="#aaaaaa" face="Arial" size="2">::</font></b><font size="1" face="Arial">&nbsp;<a href="/about.html"><font color="#0000EE">About Us</font></a></font><br/><font size="1" face="Arial">This article is licensed under the <a rel="nofollow" href="http://www.wordiq.com/redirect.php?url=http://www.gnu.org/copyleft/fdl.html" target="_blank">GNU Free Documentation License</a>. It uses material from the <a rel="nofollow" href="http://www.wordiq.com/redirect.php?url=http://en.wikipedia.org/wiki/Church-Turing thesis" target="_blank">this</a> Wikipedia article.</font>
<br/>
<br/>
    </td>
  </tr>
</table>
        </td></tr>
      </table>
    <!-- Served by www.wordiq.com in 0.26 secs. -->  </td></tr>
</table>
<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript">
try {
var pageTracker = _gat._getTracker("UA-4254872-2");
pageTracker._trackPageview();
} catch(err) {}</script>
</body>
</html>

