-- TO TEST THIS AG ONLY:
-- FPTutor/trunk/src$ ~/.cabal/bin/uuagc -dcfswH --module="Domain.FP.CodeGeneration.CollectLocalIdents" Domain/FP/CodeGeneration/CollectLocalIdents.ag

-- Patterns are only local if they're not defined top-level.
attr DeclR DeclsR
   inh isTopLevel                                       :: {Bool}

sem BodyR
   | BodyR
      decls.isTopLevel          = True

sem ExprR
   | LetR
      decls.isTopLevel          = False

sem RhsR
   | RhsR
      where.isTopLevel          = False
   | GRhsR
      where.isTopLevel          = False


attr ModuleR BodyR DeclR DeclsR ExprR ExprsR PatR PatsR AltR AltsR FunBindR FunBindsR GuardedExprR GuardedExprsR LiteralR RhsR NameR MaybeExprR MaybeNameR RangeR PositionR ListExprR TupleExprR ListPatsR TuplePatsR
  -- Version of the code where the top-level point of entry identifier has been replaced
  syn uncontractedCode                                  :: self

-- Replace the name of the original point of entry.
-- Example: isort becomes __original_isort, so we can then write isort = __original_isort CONTRACT
sem ExprR
  | VarR
      lhs  .uncontractedCode    = @loc.uncontractedCode
      loc  .uncontractedCode    = VarR @loc.updatedName @range.uncontractedCode
      loc  .updatedName         = updateName prefixPointOfEntry @name.copy @lhs.entryFunction @lhs.localIdentifiers


sem FunBindR
  | FunBindR
      lhs  .uncontractedCode    = @loc.uncontractedCode
      loc  .uncontractedCode    = FunBindR @feedback @loc.updatedName @pats.uncontractedCode @rhs.uncontractedCode @range.uncontractedCode
      loc  .updatedName         = updateName prefixPointOfEntry @name.copy @lhs.entryFunction @lhs.localIdentifiers



-- Pass local patterns downwards.
sem DeclR
  | DPatBindR
      rhs.localIdentifiers      = @loc.localIdentifiers
      loc.localIdentifiers      = if not @lhs.isTopLevel 
                                   then @pat.localPatterns ++ @lhs.localIdentifiers
                                   else @lhs.localIdentifiers

sem AltR
  | AltR
      rhs.localIdentifiers      = @loc.localIdentifiers
      loc.localIdentifiers      = @pat.localPatterns ++ @lhs.localIdentifiers

sem ExprR
  | LambdaR
      expr.localIdentifiers     = @loc.localIdentifiers
      loc.localIdentifiers      = @pats.localPatterns ++ @lhs.localIdentifiers

sem FunBindR
  | FunBindR
      rhs.localIdentifiers      = @loc.localIdentifiers
      loc.localIdentifiers      = @pats.localPatterns ++ @lhs.localIdentifiers

-- Fetch locally-bound stuff from patterns.
-- Most of this is auto-generated.
attr PatR PatsR ListPatsR TuplePatsR
  syn localPatterns use {++} {[]}                       :: {[NameR]}

sem PatR
   | PInfixConR
      lhs  .localPatterns       = @loc.localPatterns
      loc  .localPatterns       = @left.localPatterns ++ @right.localPatterns
   | PVarR
      lhs  .localPatterns       = @loc.localPatterns
      loc  .localPatterns       = [@name.copy]
   | PAsR
      lhs  .localPatterns       = @loc.localPatterns
      loc  .localPatterns       = @name.copy : @pat.localPatterns


