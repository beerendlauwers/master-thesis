attr FunBindR FunBindsR
  syn  subst                                         :: Subst

sem FunBindR
  | FBHoleR
      lhs   .subst  =   SId
  | FunBindR
      lhs  .subst   =   @loc.subst'
--      rhs  .locsubst   =   @loc.localsubsts
      name .freshContractVariable = fst @loc.conversionResults
      loc  .clhs    =   dropc ((length @pats.astTypes) - 1) $ stripQuantifiers $ @loc.cfunc
           .conversionResults = envLU @lhs.freshContractVariable @name.copy @lhs.env
           .cfunc   =   snd @loc.conversionResults
           .crhs    =   @rhs.infer
           .unify   =   unifyC  @loc.clhs @loc.crhs
           .unify'  =   splitSubsts @loc.unify
           .localsubsts = snd @loc.unify'
           .subst'  =   fst @loc.unify' `o` @rhs.subst

      -- Patterns should also be made available to RHS, because they may shadow other vars.
      rhs  .env     =   DM.union @pats.functionEnv @lhs.env
  
sem FunBindsR
  | Cons 
      lhs   .subst  =   @hd.subst `o` @tl.subst -- TODO: Collect substitution information of all definitions?
  | Nil
      lhs   .subst  =   SId


