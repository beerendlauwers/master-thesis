attr DeclR DeclsR
  syn  subst                                         :: Subst
--  inh  locsubst                                      :: Subst

sem DeclR
  | DHoleR DEmptyR
      lhs   .subst  =   SId
  | DFunBindsR
      lhs   .subst  =   @funbinds.subst
  | DPatBindR
      lhs   .subst  =   @loc.subst' -- TODO: Do we want to update those patterns here, or is that not needed?
            .infer  =   @loc.infer'
      loc   .results =   convertTopTypeToContract @lhs.freshContractVariable @pat.astType
            .clhs   =   stripQuantifiers $ snd @loc.results
            .crhs   =   @rhs.infer
            .unify  =   unifyC @loc.crhs @loc.clhs
            .unify' =   splitSubsts @loc.unify
            .localsubsts = snd @loc.unify'
            .subst' =   fst @loc.unify' `o` @rhs.subst
            .infer' =   subst @loc.subst' @loc.clhs
       pat  .freshContractVariable = fst @loc.results

sem DeclsR
  | Cons
      --tl    .subst  =   @hd.subst -- Pass down the subsitutions to the next function declaration.
      lhs   .subst  =   @hd.subst `o` @tl.subst
  | Nil
      lhs   .subst  =   SId

--sem BodyR
--  | BodyR
--      decls .locsubst  =   SId
